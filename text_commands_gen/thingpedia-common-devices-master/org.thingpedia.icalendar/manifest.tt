class @org.thingpedia.icalendar {
  import loader from @org.thingpedia.v2();
  import config from @org.thingpedia.config.form(params=makeArgMap(url:String));

  monitorable list query list_events(out start_date: Date,
                                     out end_date: Date,
                                     out summary: String,
                                     out description: String,
                                     out sequence: Number,
                                     out organizer: String #_[prompt="Who should be the organizer of the events?"],
                                     out location: String #_[prompt="What should be the location of the events?"],
                                     out status: Enum(scheduled,upcoming,started,ended))
  #_[canonical="list event on icalendar"]
  #_[confirmation="the events in your calendar"]
  #_[confirmation_remote="the events in $__person's calendar"]
  #_[formatted=[{type="code",code="(function({location, organizer, summary}, hint, formatter) {\nif (location && organizer)\n   return `${summary} (${location}, organized by ${organizer})`;\nelse if (location)\n   return `${summary} (${location})`;\nelse if (organizer)\n   return `${summary} (organized by ${organizer})`;\nelse\n   return summary;\n})"}, {type="code",code="(function({start_date, end_date}, hint, formatter) {\nif (end_date)\nreturn `Runs from ${formatter.dateAndTimeToString(start_date)} to ${formatter.dateAndTimeToString(end_date)}`;\nelse\nreturn `Starts at ${formatter.dateAndTimeToString(start_date)}`;\n})"}]]
  #[poll_interval=3600000ms]
  #[doc="list events in the calendar matching the provided arguments"];
}

